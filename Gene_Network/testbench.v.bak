`timescale 1ns/100ps
`include "gene_net.v"
`include "fixed_point_checker.v"
`include "cycle.v"

module tb_top;


endmodule

module tb_gene_net;
	reg clock;
	reg [7:0] x_in;
	wire [7:0] x_out;

	//clock signal generation
	always begin
		clock = 0; #5;
		clock = 1; #5;
	end

	//file dumping
	initial begin
		$dumpfile("wave.vcd");
		$dumpvars(0, tb_gene_net);
	end

	//input signal generation
	initial begin
		x_in = 8'b0000_0000;	//0
		#100
		x_in = 8'b0011_1000;	//56
		#100
		x_in = 8'b0100_0001;	//65
		#100
		x_in = 8'b0110_01000;	//200
		#100
		x_in = 8'b1111_1111;	//255
		#100
		$finish					//end simulation
	end

	gene_net G1 (
		.clock(clock),
		.x_in(x_in),
		.x_out(x_out)
		);

	always @(posedge clock)
		$display("Time %0t: x_in = %b, x_out = %b", $time, x_in, x_out);
endmodule

module tb_fixed_point_chk;
//
endmodule

module tb_cycle;
//
endmodule